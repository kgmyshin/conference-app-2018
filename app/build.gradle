apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'io.fabric'
apply plugin: 'com.github.ben-manes.versions'

android {
    compileSdkVersion 27
    dataBinding.enabled = true

    defaultConfig {
        applicationId "io.github.droidkaigi.confsched2018"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        resConfigs "en", "ja"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    signingConfigs {
        debug {
            storeFile rootProject.file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile rootProject.file("release.keystore")
            storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
            keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS")
            keyPassword System.getenv("ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
        }
    }
    buildTypes {
        debug {
            resValue "string", "app_name", "DroidKaigi 2018 Dev"
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            versionNameSuffix "-debug"
        }
        release {
            resValue "string", "app_name", "DroidKaigi 2018"
            signingConfig signingConfigs.release
            debuggable false
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        lintConfig file('lint.xml')
        textReport true
        textOutput 'stdout'
    }
}

dependencies {

    implementation project(':model')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Retrofit
    def retrofitVersion = '2.3.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    
    // Kotshi
    def kotshiVersion = '0.3.0-beta1'
    implementation "se.ansman.kotshi:api:$kotshiVersion"
    kapt "se.ansman.kotshi:compiler:$kotshiVersion"

    // Android Architecture Components
    implementation 'android.arch.lifecycle:runtime:1.0.3'
    implementation 'android.arch.lifecycle:extensions:1.0.0'
    implementation 'android.arch.lifecycle:reactivestreams:1.0.0'
    implementation 'android.arch.persistence.room:runtime:1.0.0'
    implementation "android.arch.persistence.room:rxjava2:1.0.0"
    kapt 'android.arch.persistence.room:compiler:1.0.0'

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.1.8"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    // OkHttp
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    // Support Library
    def supportLibraryVersion = '27.0.2'
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta4'

    // DataBinding
    kapt "com.android.databinding:compiler:3.0.1"

    // Dagger
    def daggerVersion = '2.13'
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Firebase
    // Adjust version for emulator
    def firebaseVersion = '11.6.2'
    implementation "com.google.firebase:firebase-firestore:$firebaseVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseVersion"
    implementation "com.google.firebase:firebase-core:$firebaseVersion"
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    // ThreeTenABP for JSR-310 backport
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    testImplementation 'org.threeten:threetenbp:1.3.3'

    // groupie for RecyclerView Adapter
    def groupieVersion = '2.0.0'
    implementation "com.xwray:groupie-databinding:$groupieVersion"
    implementation "com.xwray:groupie:$groupieVersion"

    // MultiDex
    implementation 'com.android.support:multidex:1.0.2'

    // Glide
    def glideVersion = '4.4.0'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.6.0'

    // Downloadable Calligraphy
    implementation 'com.github.takahirom.downloadable.calligraphy:downloadable-calligraphy:0.1.2'

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'

    // Stetho
    def stethoVersion = '1.5.0'
    debugImplementation "com.facebook.stetho:stetho:$stethoVersion"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"

    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    // Unit Test
    testImplementation "org.robolectric:robolectric:3.5.1"
    testImplementation 'com.willowtreeapps.assertk:assertk:0.9'
    // Instrumentation Test
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

}

repositories {
    mavenCentral()
}

ktlint {
    version = "0.14.0"
    android = true
    reporter = "checkstyle"
    ignoreFailures = true
}

apply plugin: 'com.google.gms.google-services'
